name: CI Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  Test:
    needs:
      - format-check
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.22.4

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Downloads
        run: go get -t ./...
      
      - name: Run Test
        run: make test

      - name: Coverage check
        run: make coverage
      
      - name: Generate Report
        run: make report
      
      - name: Copy Files
        run: |
          mkdir reports
          cp cover.html reports/.
      
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: reports
  format-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
           go-version: ^1.22.4
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Run Format Check
        run: make check-format
  build:
    name: Build App
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.22.4
      
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: make build
      
      - name: copy files
        run: |
              mkdir artifacts
              cp api artifacts/.
      
      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: api
          path: artifacts
  deliver:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: api
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Still in experimentation phase
          draft: true
          prerelease: true
      - name: Upload Release Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api
          asset_name: api
          asset_content_type: application/octet-stream
  deploy-function:
    name: Deploy Faas
    runs-on: ubuntu-latest
    needs: Test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: ls
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: 'Deploy to gen2 cloud function'
        id: deploy
        run:  |
          URL=$(gcloud functions deploy translate \
            --gen2 \
            --region=us-east1 \
            --runtime go122 \
            --trigger-http \
            --allow-unauthenticated \
            --source=. \
            --entry-point=Translate \
            --format="value(serviceConfig.uri)")
          echo "::set-output name=url::$URL"
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"
  deploy-paas:
    name: Deploy Paas
    runs-on: ubuntu-latest
    needs: Test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: ls
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
      - name: 'Use gcloud CLI'
        run: 'gcloud info'
      - name: Initialize App Engine
        run: |
          gcloud app describe || gcloud app create --region=us-central
      - name: Deploy App
        id: deploy
        uses: 'google-github-actions/deploy-appengine@v1'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          deliverables: "app.yaml"
      - id: test
        run: curl "${{ steps.deploy.outputs.url }}/hello"